eureka.client.serviceUrl.defaultZone=http://localhost:8761/eureka
logging.level.org.hibernate.SQL=DEBUG
management.endpoint.health.show-details=always
management.endpoints.web.exposure.include=*
management.health.circuitbreakers.enabled=true
management.tracing.sampling.probability=1.0
resilience4j.circuitbreaker.instances.inventory.automaticTransitionFromOpenToHalfOpenEnabled=true
resilience4j.circuitbreaker.instances.inventory.event-consumer-buffer-size=10
resilience4j.circuitbreaker.instances.inventory.failureRateThreshold=50
resilience4j.circuitbreaker.instances.inventory.permittedNumberOfCallsInHalfOpenState=3
resilience4j.circuitbreaker.instances.inventory.registerHealthIndicator=true
resilience4j.circuitbreaker.instances.inventory.slidingWindowSize=5
resilience4j.circuitbreaker.instances.inventory.slidingWindowType=COUNT_BASED
resilience4j.circuitbreaker.instances.inventory.waitDurationInOpenState=5s
resilience4j.retry.instances.inventory.max-attempts=3
resilience4j.retry.instances.inventory.wait-duration=5s
resilience4j.timelimiter.instances.inventory.timeout-duration=3s
server.port=8081
server.servlet.context-path=/
spring.application.name=order-service
spring.datasource.password=7135
spring.datasource.url=jdbc:mysql://localhost:3306/orders
spring.datasource.username=root
spring.jpa.hibernate.ddl-auto=update
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQLDialect
spring.kafka.bootstrap-servers=http://localhost:9092
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.springframework.kafka.support.serializer.JsonSerializer
spring.kafka.producer.properties.spring.json.type.mapping=event:com.orderservice.Events.PlaceOrderEvent
spring.kafka.template.default-topic=orderTopic

openapi.service.title= order-service doc
openapi.service.version= 1.0.0
openapi.service.url= http://localhost:8080